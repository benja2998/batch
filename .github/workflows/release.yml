name: Release

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install zip tar wget git -y

      - name: Get commit hash
        id: get_commit
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Generate release notes
        id: release_notes
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            RANGE=""
          else
            RANGE="$LAST_TAG..HEAD"
          fi

          # Save the logs with proper newlines
          git log $RANGE --pretty=format:"* %s%n> %b%n" --reverse > release_notes.txt

          # Escape % characters for GH Actions env file
          sed 's/%/%25/g; s/\r/%0D/g; s/\n/%0A/g' release_notes.txt > release_notes_escaped.txt

          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          cat release_notes_escaped.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create package.tar.gz
        run: tar -czvf ${{ env.COMMIT_HASH }}.tar.gz -C src .

      - name: Create package.zip
        run: zip -r ${{ env.COMMIT_HASH }}.zip src

      - name: Create stable release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          name: stable-${{ env.COMMIT_HASH }}
          tag_name: stable-${{ env.COMMIT_HASH }}
          body: ${{ env.RELEASE_NOTES }}
          files: |
            ${{ env.COMMIT_HASH }}.tar.gz
            ${{ env.COMMIT_HASH }}.zip
            test/test.bat
            LICENSE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
